{
  "name": "Gmail - New Email webhook",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const base64 = $json.body.message.data;\nconst decoded = Buffer.from(base64, 'base64').toString('utf-8');\nconst parsed = JSON.parse(decoded);\nreturn [{ json: parsed }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        0
      ],
      "id": "1c2e2dba-6187-45d9-8616-ee79209c2482",
      "name": "Get historyId from body.message.data"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "gmail-new-mail",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        16,
        0
      ],
      "id": "9e20fc16-89ef-4316-876b-e7d7805ceb55",
      "name": "Gmail-new-mail webhook",
      "webhookId": "2208bec3-bfe5-472f-9203-d3a927e8b129"
    },
    {
      "parameters": {
        "jsCode": "const staticData = $getWorkflowStaticData('global');\n\nreturn [{\n  json: {\n    lastHistoryId: staticData.lastHistoryId ?? null,\n    currentHistoryId: $json.historyId\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        432,
        0
      ],
      "id": "84d6b0f4-9606-4068-a231-d9f6a44d11c5",
      "name": "Load lastHistoryId from StaticData"
    },
    {
      "parameters": {
        "jsCode": "const staticData = $getWorkflowStaticData('global');\nconst response = $('Get history from lastHistoryId').first().json\nconst newHistoryId = Number(response.body?.historyId || 0);\nconst oldHistoryId  = Number(staticData.lastHistoryId ?? 0);\n\nif (newHistoryId > oldHistoryId) {\n  staticData.lastHistoryId = String(newHistoryId);\n}\n\nreturn [];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1536,
        -224
      ],
      "id": "1382a379-6817-4448-be44-7c11ed751f6e",
      "name": "Store new historyId in StaticData"
    },
    {
      "parameters": {
        "url": "=https://gmail.googleapis.com/gmail/v1/users/me/history",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "gmailOAuth2",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "startHistoryId",
              "value": "={{$json.lastHistoryId}}"
            },
            {
              "name": "historyTypes",
              "value": "messageAdded"
            },
            {
              "name": "labelId",
              "value": "INBOX"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        640,
        0
      ],
      "id": "7f37f1ae-0f2b-4b33-bc8b-b964832166b3",
      "name": "Get history from lastHistoryId",
      "credentials": {
        "gmailOAuth2": {
          "id": "da3gQaeFiPi7jzjm",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "messageId": "={{$json.messageId}}"
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1536,
        0
      ],
      "id": "966c038c-db3a-457e-8c7f-34223baefc55",
      "name": "Get message from messageId",
      "webhookId": "685c0fca-9edd-4ee4-9d5d-b34e328634ec",
      "credentials": {
        "gmailOAuth2": {
          "id": "da3gQaeFiPi7jzjm",
          "name": "Gmail account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1328,
        -16
      ],
      "id": "41c89982-05a7-4b8c-a69b-bf9499ebe938",
      "name": "Loop Over messageIds"
    },
    {
      "parameters": {
        "jsCode": "const ids = ($json.history ?? [])\n  .flatMap(h => h.messagesAdded ?? [])\n  .map(m => ({ json: { messageId: m.message.id } }));\n\n// nothing found?  â†’ return one dummy item\nif (ids.length === 0) {\n  return [{ json: { __empty: true } }];\n}\n\nreturn ids;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        848,
        0
      ],
      "id": "043cd820-7158-497d-8dce-d22950039fcf",
      "name": "Get messageIds from history"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b14f5651-f33c-4e29-9e4a-173c921582fa",
              "leftValue": "={{ $json.messageId }}",
              "rightValue": 0,
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1056,
        0
      ],
      "id": "3de056a8-cbf5-4b6f-be4a-ba3ef3d6a280",
      "name": "If messageIds > 0"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "989eefa6-622b-4d72-8e44-e5db39616598",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1728,
        0
      ],
      "id": "a8dcbc7f-113c-44ba-b42d-005adf00950e",
      "name": "If message exists",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "fe2ovvKxL6UCgv0Z",
          "mode": "list",
          "cachedResultName": "Gmail - Delete GMX Mailer Daemon"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1952,
        -16
      ],
      "id": "2d664422-6f5f-49b1-91e6-d3879fa23832",
      "name": "Process message",
      "alwaysOutputData": true
    }
  ],
  "pinData": {
    "Gmail-new-mail webhook": [
      {
        "json": {
          "headers": {
            "connection": "keep-alive",
            "host": "n8n.3x3cut0r.de",
            "x-forwarded-scheme": "https",
            "x-forwarded-proto": "https",
            "x-forwarded-for": "34.116.21.5",
            "x-real-ip": "34.116.21.5",
            "content-length": "322",
            "content-type": "application/json",
            "accept": "application/json",
            "from": "noreply@google.com",
            "user-agent": "APIs-Google; (+https://developers.google.com/webmasters/APIs-Google.html)",
            "accept-encoding": "gzip, deflate, br"
          },
          "params": {},
          "query": {},
          "body": {
            "message": {
              "data": "eyJlbWFpbEFkZHJlc3MiOiJqdWxpYW5yZWl0aDIyNEBnbWFpbC5jb20iLCJoaXN0b3J5SWQiOjU2NDkyMDd9",
              "messageId": "15043592798488139",
              "message_id": "15043592798488139",
              "publishTime": "2025-07-20T07:47:04.53Z",
              "publish_time": "2025-07-20T07:47:04.53Z"
            },
            "subscription": "projects/nodemation-465018/subscriptions/gmail-sub"
          },
          "webhookUrl": "https://n8n.3x3cut0r.de/webhook/gmail-new-mail",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Get historyId from body.message.data": {
      "main": [
        [
          {
            "node": "Load lastHistoryId from StaticData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail-new-mail webhook": {
      "main": [
        [
          {
            "node": "Get historyId from body.message.data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load lastHistoryId from StaticData": {
      "main": [
        [
          {
            "node": "Get history from lastHistoryId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store new historyId in StaticData": {
      "main": [
        []
      ]
    },
    "Get history from lastHistoryId": {
      "main": [
        [
          {
            "node": "Get messageIds from history",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get message from messageId": {
      "main": [
        [
          {
            "node": "If message exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over messageIds": {
      "main": [
        [
          {
            "node": "Store new historyId in StaticData",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get message from messageId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get messageIds from history": {
      "main": [
        [
          {
            "node": "If messageIds > 0",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If messageIds > 0": {
      "main": [
        [
          {
            "node": "Loop Over messageIds",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Store new historyId in StaticData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If message exists": {
      "main": [
        [
          {
            "node": "Process message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over messageIds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process message": {
      "main": [
        [
          {
            "node": "Loop Over messageIds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "bb68e8d5-5e11-4d33-bab3-60f277a6c147",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "61c1812dff103a4a814b5c48159bea5eb090aacf5a1060cc3e9bcb96d59a25d9"
  },
  "id": "r5EjaqjMFPSUikOu",
  "tags": []
}